<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHacha1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>armaEnAtaque = false;
posicionArma[0]=0;
posicionArma[1]=0;
dirAtaque = 0;

//0 Hacha  ;  1 
armaTipo = 0;

image_xscale = 0;
image_yscale = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_angle&gt;0){
    image_angle -= 6*dirAtaque ;
}else {
    image_angle = 360;
}

x += 16*dirAtaque;
y += 4;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

key_up = keyboard_check(vk_up);
key_right = keyboard_check(vk_right);
key_down = keyboard_check(vk_down);
key_left = keyboard_check(vk_left);
key_s = keyboard_check_pressed(ord('Z'));

//El arma ataca o se mueve al lado del jugador
if (key_s and depth==1){
        audio_play_sound(sndHacha, 6,false);
        if (objElPincheAmo.direccion ==1 ){
            dirAtaque = 1 ;
        }else {
            dirAtaque = -1;
        }
        depth = -1; //Pone el hacha en frente
        sprite_index = sprHacha2;
        image_xscale =1.3*dirAtaque; //hace el hacha grande
        image_yscale =1.3;
        image_angle= 0;
        armaEnAtaque=true; //empieza a mover y girar el hacha
        x = objElPincheAmo.x;
        y = objElPincheAmo.y-20; 
        
        
}



/*else if (point_distance(x, y, objElPincheAmo.x, objElPincheAmo.y) &gt; 5 and (depth==1)){
    move_towards_point(objElPincheAmo.x, objElPincheAmo.y, 5);
}else {
    speed = 0;
}*/

if(armaEnAtaque){
    if (armaTipo == 0) {
        alarm[1] = 1;
    }
 
}


if (place_meeting(x, y, objWall)){

    sprite_index = sprHacha1;
    armaEnAtaque = false;
       
}

if (place_meeting(x, y, objElPincheAmo) and (armaEnAtaque == false)){
    depth = 1;
    image_xscale =0; 
    image_yscale =0;
}

if (place_meeting(x,y,objEnemigo) and armaEnAtaque){
    with (instance_nearest(x, y, objEnemigo)){
        instance_destroy();
    }
    instance_create(x,y,objExplocion);
    audio_play_sound(sndExplosion, 6,false);
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
